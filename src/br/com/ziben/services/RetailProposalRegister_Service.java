package br.com.ziben.services;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.7.7
 * 2013-10-29T20:29:16.854-02:00
 * Generated source version: 2.7.7
 * 
 */
@WebServiceClient(name = "RetailProposalRegister", wsdlLocation = "http://172.30.0.58/gestor-varejo/services/RetailProposalRegister?wsdl", targetNamespace = "http://gestorvarejo.toolssoftware.com/wsdl/")
public class RetailProposalRegister_Service extends Service {

	public final static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName("http://gestorvarejo.toolssoftware.com/wsdl/", "RetailProposalRegister");
	public final static QName RetailProposalRegister = new QName("http://gestorvarejo.toolssoftware.com/wsdl/", "RetailProposalRegister");
	static {
		URL url = null;
		try {
			url = new URL("http://172.30.0.58/gestor-varejo/services/RetailProposalRegister?wsdl");
		} catch (MalformedURLException e) {
			java.util.logging.Logger.getLogger(RetailProposalRegister_Service.class.getName()).log(java.util.logging.Level.INFO,
					"Can not initialize the default wsdl from {0}", "http://172.30.0.58/gestor-varejo/services/RetailProposalRegister?wsdl");
		}
		WSDL_LOCATION = url;
	}

	public RetailProposalRegister_Service(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public RetailProposalRegister_Service(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public RetailProposalRegister_Service() {
		super(WSDL_LOCATION, SERVICE);
	}

	/**
	 * 
	 * @return
	 *         returns RetailProposalRegister
	 */
	@WebEndpoint(name = "RetailProposalRegister")
	public RetailProposalRegister getRetailProposalRegister() {
		return super.getPort(RetailProposalRegister, RetailProposalRegister.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the <code>features</code> parameter will have
	 *            their default values.
	 * @return
	 *         returns RetailProposalRegister
	 */
	@WebEndpoint(name = "RetailProposalRegister")
	public RetailProposalRegister getRetailProposalRegister(WebServiceFeature... features) {
		return super.getPort(RetailProposalRegister, RetailProposalRegister.class, features);
	}

}
